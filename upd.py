# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rEOz8cK96uX-hQp0DRMH7VN5-w0Jcl4y
"""

import numpy as np
import pandas as pd

def momemtum_grad_descent(W,B,grad_W,grad_B,eta,gamma,prev_w = 0,prev_b = 0):
  
  
  l = len(W)
  for i in range(l):
    grad_W['w'+ str(i)]  = gamma * prev_w + eta * grad_W['w'+str(i)]      #updates
    grad_B['b' + str(i)] = gamma * prev_b + eta * grad_B['b'+str(i)]
    
    W['w' + str(i)] = W['w' + str(i)] - grad_W['w'+ str(i)]
    B['b'+str(i)] =  B['b'+str(i)] - grad_B['b'+str(i)]

    prev_w['pw' + str(i)] = grad_W['w'+ str(i)]
    prev_b['pb' + str(i)] = grad_B['b' + str(i)]

    return W,B,prev_w,prev_b

def grad_descent(W,B,grad_W,grad_B,eta):
  W,B,grad_W,grad_B = momentum_grad_descent(W,B,grad_W,grad_B,eta,0,0,0)
  return W,B,grad_W,grad_B



