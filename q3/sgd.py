# -*- coding: utf-8 -*-
"""sgd.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1afoSWloREuQB9aWfRbpDAXqzLG62Xc_z
"""

import numpy as np
import myDLkit

from tensorflow.keras.datasets import fashion_mnist
(x_train, y_train), (x_test, y_test) = fashion_mnist.load_data()

n_inputs = 784
n_hidden_layers = 5
n_outputs = 10
eta = 0.01
gamma = 0.9
errors = []

def data_preprocessing(features):
  '''
  features: N * w * h array   (images)
  this function normalizes the intensity values
  '''
  data = features.astype(np.float)        #convert to float
  data_norm = data/255.0                 # normalized to 0 and 1
  return data_norm

nn = myDLkit.feed_fwd_nn(n_hidden_layers, n_inputs, n_outputs)
err = 0       #track error after each iteration/epochs
for i in range(100):       # iterations
  for j in range(x_test.shape[0]):         #itetrate over all examples
    norm_x = data_preprocessing(x_test)
    nn.backProp((norm_x[j,:,:]).reshape(1,-1),y_test[j])      #pass one example at a time
    errors.append(nn.error)
    err = err + nn.error
    for m in nn.grad_wrt_b:
      nn.layers[m].b = nn.layers[m].b - (eta*nn.grad_wrt_b[m].T)
    for p in nn.grad_wrt_W:
      nn.layers[p].W = nn.layers[p].W - (eta*nn.grad_wrt_W[p])
  print("=============================")
  print("The error after %s epoch: %s" %(i,err))

